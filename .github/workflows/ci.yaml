name: CI

on:
  push:
    branches:
    - main
  pull_request:

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Test
      run: |
        set -ux

        script/install.sh "sudo apt-get install -y gnustep-devel"
        script/install.sh "sudo dpkg --add-architecture i386; sudo apt-get update; sudo apt-get install -y libc6:i386 gcc-multilib"
        script/install.sh "sudo apt-get install -y ruby"
        script/install.sh "sudo apt-get install -y ghc"
        script/install.sh "sudo apt-get install -y mono-mcs mono-devel mono-complete mono-vbnc fsharp"
        script/install.sh "wget https://www.scala-lang.org/files/archive/scala-2.13.6.deb; sudo dpkg -i scala-2.13.6.deb"
        script/install.sh "curl -sSf https://sh.rustup.rs | sudo sh -s -- -y"; export PATH=$HOME/.cargo/bin:$PATH
        script/install.sh "wget https://swift.org/builds/swift-5.4.3-release/ubuntu2004/swift-5.4.3-RELEASE/swift-5.4.3-RELEASE-ubuntu20.04.tar.gz && tar xzvf swift-5.4.3-RELEASE-ubuntu20.04.tar.gz"; export PATH=$PWD/swift-5.4.3-RELEASE-ubuntu20.04/usr/bin:$PATH
        script/install.sh "wget https://github.com/JetBrains/kotlin/releases/download/v1.5.30/kotlin-compiler-1.5.30.zip; unzip kotlin-compiler-1.5.30.zip"; export PATH=$PWD/kotlinc/bin:$PATH
        script/install.sh "sudo apt-get install -y groovy"
        script/install.sh "wget https://s3.us-west-2.amazonaws.com/downloads.dlang.org/releases/2021/dmd_2.097.2-0_amd64.deb; sudo dpkg -i dmd_2.097.2-0_amd64.deb"
        script/install.sh "sudo apt-get install -y gnu-smalltalk"
        script/install.sh "sudo apt-get install -y php5"
        script/install.sh "wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb; sudo dpkg -i erlang-solutions_1.0_all.deb; sudo apt-get update"
        script/install.sh "sudo apt-get install -y erlang"
        script/install.sh "sudo apt-get install -y elixir"
        script/install.sh "sudo apt-get install -y r-base"
        script/install.sh "curl http://dist.crystal-lang.org/apt/setup.sh | sudo bash; sudo apt-get install -y crystal"
        script/install.sh "wget https://nim-lang.org/download/nim-0.19.4.tar.xz && tar xvf nim-0.19.4.tar.xz && cd nim-0.19.4 && sh build.sh"; export PATH=$PWD/nim-0.19.4/bin:$PATH
        script/install.sh "sudo npm install -g bower"
        script/install.sh "sudo npm install -g coffeescript"
        script/install.sh "sudo npm install -g livescript"
        script/install.sh "sudo npm install -g typescript ts-node @types/node"
        script/install.sh "sudo npm install -g purescript pulp"
        script/install.sh "sudo apt-get install -y libedit-dev; wget http://www.jsoftware.com/download/j805/install/j805_linux64.tar.gz; tar xzvf j805_linux64.tar.gz"; export PATH=$PWD/j64-805/bin:$PATH
        script/install.sh "sudo apt-get install -y gauche"
        script/install.sh "sudo apt-get install -y ocaml"
        script/install.sh "wget -O src/clojure/clojure-1.8.0.jar https://repo1.maven.org/maven2/org/clojure/clojure/1.8.0/clojure-1.8.0.jar"
        script/install.sh "curl -sSfL -o zig.tar.xz https://ziglang.org/builds/zig-linux-x86_64-0.10.0-dev.4166+cae76d829.tar.xz && mkdir -p zig && tar xvf zig.tar.xz -C zig --strip-components 1" && export PATH=$PWD/zig:$PATH

        make build
        make test

    - name: Clean up
      run: make clean

    - name: Output result
      run: cat result.txt
